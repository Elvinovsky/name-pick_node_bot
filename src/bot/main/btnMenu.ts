import { KeyboardButton } from 'node-telegram-bot-api';

//MENU UI
//...........................................................

export const Buttons: IButtons = {
  mainMenu: {
    searchByFilters: { text: 'üîç –ü–æ–¥–±–æ—Ä –∏–º–µ–Ω–∏ (–ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º)' },
    randomName: { text: 'üé≤ –°–ª—É—á–∞–π–Ω–æ–µ –∏–º—è' },
    nameLists: { text: 'üìú –°–ø–∏—Å–∫–∏ –∏–º–µ–Ω' },
    nameMeaning: { text: 'üí° –ó–Ω–∞—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏' },
    favorites: { text: '‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –∏–º–µ–Ω–∞' },
    settings: { text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏' },
  },

  favoriteName: {
    delete: { text: '‚ùå  –£–¥–∞–ª–∏—Ç—å' },
    add: { text: '‚úÖ –î–æ–±–∞–≤–∏—Ç—å' },
  },
  filters: {
    genderBoy: { text: 'üë¶ –ú–∞–ª—å—á–∏–∫' },
    genderGirl: { text: 'üëß –î–µ–≤–æ—á–∫–∞' },
    eroupean: { text: 'üåç –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ' },
    eastern: { text: 'üåè –í–æ—Å—Ç–æ—á–Ω—ã–µ' },
    arabian: { text: 'üïå –ê—Ä–∞–±—Å–∫–∏–µ' },
    caucasian: { text: 'üèî –ö–∞–≤–∫–∞–∑—Å–∫–∏–µ' },
    rare: { text: '–†–µ–¥–∫–∏–µ' },
  },
  randomName: {
    accept: { text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å' },
    requestAnother: { text: 'üîÅ –ü–æ–ø—Ä–æ—Å–∏—Ç—å –¥—Ä—É–≥–æ–µ' },
    addToFavorites: { text: '‚ù§Ô∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ' },
  },
  nameLists: {
    topPopulare: { text: "üíé –¢–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏–º–µ–Ω" },
    rareUnusual: { text: 'üïä –†–µ–¥–∫–∏–µ –∏ –Ω–µ–æ–±—ã—á–Ω—ã–µ' },
    classicOld: { text: 'üìú –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∏ —Å—Ç–∞—Ä–∏–Ω–Ω—ã–µ' },
  },
  settings: {
    exportFavorites: { text: 'üì• –≠–∫—Å–ø–æ—Ä—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∏–º–µ–Ω' },
    notifications: { text: 'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' },
    theme: { text: 'üé® –¢–µ–º–∞' },
    language: { text: 'üåç –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞' },
  },
  back: { text: '‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' },
  apply: { text: '‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å' },
  more: { text: 'üîÑ –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë' },
} as const;

export const ButtonsLayout: ButtonsLayoutType = {
  mainMenu: [
    [Buttons.mainMenu.searchByFilters, Buttons.mainMenu.randomName],
    [Buttons.mainMenu.nameLists, Buttons.mainMenu.nameMeaning],
    [Buttons.mainMenu.favorites, Buttons.mainMenu.settings],
  ],

  filters: [
    [Buttons.filters.genderBoy, Buttons.filters.genderGirl, Buttons.filters.rare],
    [Buttons.filters.eroupean, Buttons.filters.eastern],
    [Buttons.filters.arabian, Buttons.filters.caucasian],
    [Buttons.apply, Buttons.back],
  ],
  nameLists: [
    [Buttons.nameLists.topPopulare, Buttons.nameLists.rareUnusual],
    [Buttons.nameLists.classicOld, Buttons.back],
  ],

  favoriteName: [[Buttons.favoriteName.add, Buttons.favoriteName.delete], [Buttons.back]],

  randomName: [[Buttons.randomName.accept, Buttons.randomName.requestAnother], [Buttons.randomName.addToFavorites], [Buttons.back]],

  settings: [[Buttons.settings.exportFavorites, Buttons.settings.notifications], [Buttons.settings.theme, Buttons.settings.language], [Buttons.back]],

  more: [[Buttons.more], [Buttons.back]],

  back: [[Buttons.back]],

  apply: [[Buttons.apply]],
} as const;

//INTERFACES / TYPES
//...........................................................

interface IButtons {
  mainMenu: IMainMenuButtons;
  filters: IFiltersButtons;
  randomName: IRandomNameButtons;
  favoriteName: IFavoriteNameButtons;
  nameLists: INameListsButtons;
  settings: ISettingsButtons;
  back: IButton;
  apply: IButton;
  more: IButton;
}

type ButtonsLayoutType = {
  [key in keyof IButtons]: KeyboardButton[][];
};

interface IButton {
  text: string;
}

interface IMainMenuButtons {
  [key: string]: { text: string };
  searchByFilters: IButton;
  randomName: IButton;
  nameLists: IButton;
  nameMeaning: IButton;
  favorites: IButton;
  settings: IButton;
}

interface IFiltersButtons {
  [key: string]: { text: string };
  genderBoy: IButton;
  genderGirl: IButton;
  eroupean: IButton;
  eastern: IButton;
  arabian: IButton;
  caucasian: IButton;
  rare: IButton;
}

interface IRandomNameButtons {
  [key: string]: { text: string };
  accept: IButton;
  requestAnother: IButton;
  addToFavorites: IButton;
}

interface IFavoriteNameButtons {
  [key: string]: { text: string };
  add: IButton;
  delete: IButton;
}

interface INameListsButtons {
  [key: string]: { text: string };
  topPopulare: IButton;
  rareUnusual: IButton;
  classicOld: IButton;
}

interface ISettingsButtons {
  [key: string]: { text: string };
  exportFavorites: IButton;
  notifications: IButton;
  theme: IButton;
  language: IButton;
}
